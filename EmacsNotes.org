* Key Shortcuts
** General
| Command                   | Key     | Description                            |
|---------------------------+---------+----------------------------------------|
| ?                         | C-x C-f | Opens or creates a new file            |
| ?                         | C-x C-w | Save As                                |
| ?                         | C-x C-s | Save                                   |
| ?                         | C-x 0   | Remove window in focus                 |
| ?                         | C-x 1   | Remove all windows except one in focus |
| split-window-horizontally | C-x 2   | Splits window horizontally             |
| split-window-vertically   | C-x 3   | Splits window vertically               |
| ?                         | C-x o   | Switch focus between windows           |
| ?                         | C-x +   | Equally size windows                   |

** Text
| Command           | Key     | Description                          |
|-------------------+---------+--------------------------------------|
| ?                 | C-Space | Start selection                      |
| ?                 | C-w     | Cut selection                        |
| ?                 | M-w     | Copy selection                       |
| ?                 | C-y     | Paste                                |
| ?                 | C-_     | Undo                                 |
| ?                 | C-g     | Redo: Reverse undo history then undo |
| mark-whole-buffer | C-x h   | Select all text                      |
| indent-region     | C-M-\   | Indent (code)                        |

** Projectile
| Command | Key   | Description              |
|---------+-------+--------------------------|
| ?       | C-p p | Open project             |
| ?       | C-p f | Find file within project |

** Org Mode
| Command | Key            | Description                             |
|---------+----------------+-----------------------------------------|
| ?       | Shift-Tab      | Fold content                            |
| ?       | C-Enter        | Add new heading at same level as cursor |
| ?       | Alt-Enter      | Add new item in list                    |
| ?       | C-c pipe       | Create table with row / col count       |
| ?       | Tab            | Select next cell or row in table        |
| ?       | Alt-up-arrow   | Move heading element above              |
| ?       | Alt-down-arrow | Move heading element down               |

** Org-Roam
| Command                | Key     | Description    |
|------------------------+---------+----------------|
| org-roam-buffer-toggle | C-c n l | Buffer Toggle? |
| org-roam-node-find     | C-c n f | Node Find      |
| org-roam-node-insert   | C-c n i | Node Insert    |

** Buffers
| Command | Key             | Description                           |
|---------+-----------------+---------------------------------------|
| ?       | C-x left-arrow  | Switch buffer left                    |
| ?       | C-x right-arrow | Switch buffer right                   |
| ?       | C-x b           | Open buffer list to switch to new one |
| ?       | C-x C-b         | Show open buffers                     |
| ?       | C-x k           | Kill buffer                           |
| ?       | C-x K           | Kill all buffers (custom command)     |
   
** Magit
| Command      | Key   | Description  |
|--------------+-------+--------------|
| magit-status | C-x g | Magit Status |
|              |       |              |

** Magit Status Buffer
| Command | Key      | Description                    |
|---------+----------+--------------------------------|
| ?       | s        | Stage file that cursor is on   |
| ?       | S        | Stage all modified files       |
| ?       | u        | Unstage file that cursor is on |
| ?       | U        | Unstage all files              |
| ?       | Mark + s | Stage hunk that is marked      |
| ?       | P        | Push                           |
  
* Configuration
** General
#+BEGIN_SRC emacs-lisp -n
  ;; Sets default tab width to 4
  (setq-default tab-width 4) 

  ;; By default, emacs will create backup files in the
  ;; same folder as the file being opened/edited
  ;; This will set a dediated folder for backup files
  ;; The folder specified can be of any name or location
  (setq backup-directory-alist '(("." . "~/.emacs-backup-files")))

  ;; Unsure, but, I think it makes backing up files safer
  (setq backup-by-copying t)
#+END_SRC

** User Interface
#+BEGIN_SRC emacs-lisp -n
  (setq inhibit-start-message t)  ;; Turns off welcome page
  (scroll-bar-mode -1)            ;; Unsure
  (tool-bar-mode -1)              ;; Turns off toolbar at the top of the window
  (tooltip-mode -1)               ;; Unsure
  (set-fringe-mode 10)            ;; Unsure
  (setq visible-bell t) ;; Turns off bell sound, enables visual bell
  (load-theme 'misterioso) ;; loads a theme by using a symbol
#+END_SRC
*** Modeline
Doom modeline can make the modeline better:
#+BEGIN_SRC emacs-lisp -n
  (use-package doom-modeline
	:ensure t
	:init (doom-modeline-mode 1)
	:custom ((doom-modeline-height 15)))
#+END_SRC
** Font Setup
To change the default font, we need to run this function
#+begin_src emacs-lisp
(set-face-attribute 'default nil :font "Font Name" :height 160)
#+end_src

** Setup Package Manager
#+begin_src emacs-lisp
  (require 'package)
  (setq package-archives '(("melpa" . "https://melpa.org/packages/")
						   ("org" . "https://orgmode.org/elpa/")
						   ("elpa" . "https://elpa.gnu.org/packages/")))

  (package-initialize)
  (unless package-archive-contents
	  (package-install 'use-package))

  (reqiure 'use-package)
  (setq use-package-always-ensure t)
#+end_src

** Key Shortcut Configuration
#+BEGIN_SRC emacs-lisp -n
  ;; To create a global key shortcut
  (global-set-key (kbd "C-M-j") 'counsel-switch-buffer)
#+END_SRC

There is a package called general.el that will allow the
creation of a global prefix hotkey that can be used to
show a menu of customized actions.  This is helpful so that
you don't have to worry about creating hotkeys that might
override existing hotkeys.
#+BEGIN_SRC emacs-lisp -n
  (use-package general
	:config
	(general-create-definer custom_name_here/leader-keys
	:prefix "SPC"
	:global-prefix "C-M-SPC")
	(general-auto-unbind-keys)
	(custom_name_here/leader-keys
	  "t" '(:ignore t :which-key "choose theme")
	  "tt" '(counsel-load-theme :which-key "choose theme")))
#+END_SRC
This example sets up control + alt + space as a starting key
which will then show a new menu that can be configured.

Here is a way to add more items to this menu
This will create a way that we can scale text up and down
#+BEGIN_SRC emacs-lisp -n
  (use-package hydra
	  (defhydra hydra-text-scale (:timeout 4)
		"scale text"
		("j" text-scale-increase "in")
		("k" text-scale-decrease "out")
		("f" nil "finished" :exit t))

	(custom_name_here/leader-keys "ts" '(hydra-text-scale/body :which-key "scale text"))
#+END_SRC
This will add a menu entry after hitting the first t, which will include the scale text option

** Other Stuff
- general (hotkeys)
- projectile
- hydra
- helpful
- doom-modeline
- all-the-icons

* Need to document
http://howardism.org/Technical/Emacs/eshell-why.html
Emacs shell
Redirect output to buffer

* Org Mode Notes
** Libraries to look into
org-bullets


* To Check Into
** String Library: https://github.com/magnars/s.el
** Completion Library: https://company-mode.github.io/
** Hotkey Display Library: https://github.com/justbur/emacs-which-key
** Smartparens: https://github.com/Fuco1/smartparens
** Hotkey manager: https://melpa.org/#/hydra
** Window switcher: https://github.com/abo-abo/ace-window

